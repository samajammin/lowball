import React, { useEffect, useState } from "react";
import { ethers } from "ethers";
import "./App.css";
import addresses from "./contract-address.json";

// TODO import this from the artifacts file generated by buidler
const GreeterABI = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

// Created check function to see if the MetaMask extension is installed
const isMetaMaskInstalled = () => {
  // Have to check the ethereum binding on the window object to see if it's installed
  const { ethereum } = window;
  return Boolean(ethereum && ethereum.isMetaMask);
};

const App = () => {
  const [appState, setAppState] = useState({
    address: "0xc783df8a850f42e7F7e57013759C285caa701eB6", // TODO
    greeting: "",
    balance: "",
    provider: {},
  });

  useEffect(() => {
    const initialize = async () => {
      const provider = await new ethers.providers.Web3Provider(
        window.web3.currentProvider
      );

      // TODO is this specific to MetaMask?
      // Should add check for MetaMask
      // https://docs.metamask.io/guide/create-dapp.html
      const { ethereum } = window;
      await ethereum.enable();

      const address = appState.address;
      let balance = await provider.getBalance(address);
      balance = ethers.utils.formatEther(balance);

      const contract = new ethers.Contract(
        addresses.Greeter,
        GreeterABI,
        provider
      );

      const greeting = await contract.greet();

      setAppState({
        balance,
        provider,
        address,
        greeting,
      });
    };
    initialize();
  }, [appState.address]);

  return (
    <div className="App">
      <section>
        <h1>HEY THERE</h1>
        {!isMetaMaskInstalled() && (
          <h1>You need to install MetaMask to use this app.</h1>
        )}
        <h3>User balance:</h3>
        {appState.balance}
      </section>
      <h1>Greeting: {appState.greeting}</h1>
      <h1>Set greeting:</h1>
      <input type="text" placeholder="New greeting..."></input>
      <button>Set</button>
    </div>
  );
};

export default App;
